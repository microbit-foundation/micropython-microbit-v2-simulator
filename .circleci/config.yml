version: 2.1
orbs:
  queue: eddiewebb/queue@1.6.2

_default_workflow: &default_workflow
  context:
    - "GitHub Packages Read"
    - "CircleCI API"
    - "AWS Web"
_defaults: &defaults
  working_directory: ~/repo
_docker_defaults: &docker_defaults
  image: cimg/node:16.14
_steps:
  queue_until_front_of_line: &queue_until_front_of_line
    # Ensures we don't deploy concurrently
    # See https://github.com/eddiewebb/circleci-queue
    queue/until_front_of_line:
      time: "60"
  restore_npm_cache: &restore_npm_cache
    restore_cache:
      keys:
        - npm-v1-{{ .Branch }}-{{ checksum "package-lock.json" }}
        - npm-v1-{{ .Branch }}-
        - npm-v1-
  save_npm_cache: &save_npm_cache
    save_cache:
      paths:
        - .npm-cache
      key: npm-v1-{{ .Branch }}-{{ checksum "package-lock.json" }}
  install_aws_cli: &install_aws_cli
    run: sudo apt-get update && sudo apt-get install awscli
  install_dependencies: &install_dependencies
    run: npm ci --cache .npm-cache && sudo npm config set @microbit-foundation:registry https://npm.pkg.github.com/microbit-foundation && sudo npm i -g @microbit-foundation/website-deploy-aws@0.3.0 @microbit-foundation/website-deploy-aws-config@0.5.0-dev.84 @microbit-foundation/circleci-npm-package-versioner@1
  update_version: &update_version
    run: npm run ci:update-version
  build: &build
    run:
      name: Build
      command: ./ci-build.sh
  deploy: &deploy
    run:
      name: Deploy
      environment:
        NODE_PATH: /usr/local/lib/node_modules
      command: npm run deploy
  invalidate: &invalidate
    run:
      name: Invalidate CloudFront distribution
      command: "npm run invalidate"
  configure_registry_auth: &configure_registry_auth
    run:
      name: Configure registry auth
      # One for each user as we do global and local installs.
      command: echo "//npm.pkg.github.com/:_authToken=$GITHUB_TOKEN" >> ~/repo/.npmrc && sudo echo "//npm.pkg.github.com/:_authToken=$GITHUB_TOKEN" | sudo tee -a /root/.npmrc > /dev/null

jobs:
  review:
    <<: *defaults
    docker:
      - <<: *docker_defaults
        environment:
          STAGE: REVIEW
          REVIEW_CLOUDFRONT_DISTRIBUTION_ID: "E2DW5F7PA9W7JD"
    steps:
      - checkout
      - *restore_npm_cache
      - *configure_registry_auth
      - *install_aws_cli
      - *install_dependencies
      - *update_version
      - *save_npm_cache
      - *build
      - *queue_until_front_of_line
      - *deploy
      - *invalidate

  staging:
    <<: *defaults
    docker:
      - <<: *docker_defaults
        environment:
          STAGE: STAGING
          STAGING_CLOUDFRONT_DISTRIBUTION_ID: "E15FPP46STH15O"
    steps:
      - checkout
      - *restore_npm_cache
      - *configure_registry_auth
      - *install_aws_cli
      - *install_dependencies
      - *update_version
      - *save_npm_cache
      - *build
      - *queue_until_front_of_line
      - *deploy
      - *invalidate

  production:
    <<: *defaults
    docker:
      - <<: *docker_defaults
        environment:
          STAGE: PRODUCTION
          PRODUCTION_CLOUDFRONT_DISTRIBUTION_ID: "E15FPP46STH15O"
    steps:
      - checkout
      - *restore_npm_cache
      - *configure_registry_auth
      - *install_aws_cli
      - *install_dependencies
      - *update_version
      - *save_npm_cache
      - *build
      # This doesn't work for tags. Don't release more than one at once!
      # - *queue_until_front_of_line
      - *deploy
      - *invalidate

workflows:
  version: 2
  review:
    jobs:
      - review:
          <<: *default_workflow
          filters:
            branches:
              ignore: main
  staging:
    jobs:
      - staging:
          <<: *default_workflow
          filters:
            branches:
              only: main
  production:
    jobs:
      - production:
          <<: *default_workflow
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
