/**
 * Adapted from Microsoft MakeCode's conversion of the CODAL synthesizer.
 * Copyright (c) Microsoft Corporation
 * SPDX-License-Identifier: MIT
 *
 * https://github.com/microsoft/pxt/blob/676b0eeaf419386fc50b251ec60a73d940941d80/pxtsim/sound/soundSynthesizer.ts
 */

/**
 * Adapted from lancaster-university/codal-core
 * https://github.com/lancaster-university/codal-core/blob/master/source/streams/Synthesizer.cpp#L54
 */
const sineTone = [
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 3, 3, 3, 4, 4, 5, 5, 6,
  6, 7, 7, 8, 8, 9, 9, 10, 11, 11, 12, 13, 13, 14, 15, 16, 16, 17, 18, 19, 20,
  21, 22, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 40,
  41, 42, 43, 45, 46, 47, 49, 50, 51, 53, 54, 56, 57, 58, 60, 61, 63, 64, 66,
  68, 69, 71, 72, 74, 76, 77, 79, 81, 82, 84, 86, 87, 89, 91, 93, 95, 96, 98,
  100, 102, 104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128,
  130, 132, 134, 136, 138, 141, 143, 145, 147, 149, 152, 154, 156, 158, 161,
  163, 165, 167, 170, 172, 175, 177, 179, 182, 184, 187, 189, 191, 194, 196,
  199, 201, 204, 206, 209, 211, 214, 216, 219, 222, 224, 227, 229, 232, 235,
  237, 240, 243, 245, 248, 251, 253, 256, 259, 262, 264, 267, 270, 273, 275,
  278, 281, 284, 287, 289, 292, 295, 298, 301, 304, 307, 309, 312, 315, 318,
  321, 324, 327, 330, 333, 336, 339, 342, 345, 348, 351, 354, 357, 360, 363,
  366, 369, 372, 375, 378, 381, 384, 387, 390, 393, 396, 399, 402, 405, 408,
  411, 414, 417, 420, 424, 427, 430, 433, 436, 439, 442, 445, 448, 452, 455,
  458, 461, 464, 467, 470, 473, 477, 480, 483, 486, 489, 492, 495, 498, 502,
  505, 508, 511, 514, 517, 520, 524, 527, 530, 533, 536, 539, 542, 545, 549,
  552, 555, 558, 561, 564, 567, 570, 574, 577, 580, 583, 586, 589, 592, 595,
  598, 602, 605, 608, 611, 614, 617, 620, 623, 626, 629, 632, 635, 638, 641,
  644, 647, 650, 653, 656, 659, 662, 665, 668, 671, 674, 677, 680, 683, 686,
  689, 692, 695, 698, 701, 704, 707, 710, 713, 715, 718, 721, 724, 727, 730,
  733, 735, 738, 741, 744, 747, 749, 752, 755, 758, 760, 763, 766, 769, 771,
  774, 777, 779, 782, 785, 787, 790, 793, 795, 798, 800, 803, 806, 808, 811,
  813, 816, 818, 821, 823, 826, 828, 831, 833, 835, 838, 840, 843, 845, 847,
  850, 852, 855, 857, 859, 861, 864, 866, 868, 870, 873, 875, 877, 879, 881,
  884, 886, 888, 890, 892, 894, 896, 898, 900, 902, 904, 906, 908, 910, 912,
  914, 916, 918, 920, 922, 924, 926, 927, 929, 931, 933, 935, 936, 938, 940,
  941, 943, 945, 946, 948, 950, 951, 953, 954, 956, 958, 959, 961, 962, 964,
  965, 966, 968, 969, 971, 972, 973, 975, 976, 977, 979, 980, 981, 982, 984,
  985, 986, 987, 988, 989, 990, 992, 993, 994, 995, 996, 997, 998, 999, 1000,
  1000, 1001, 1002, 1003, 1004, 1005, 1006, 1006, 1007, 1008, 1009, 1009, 1010,
  1011, 1011, 1012, 1013, 1013, 1014, 1014, 1015, 1015, 1016, 1016, 1017, 1017,
  1018, 1018, 1019, 1019, 1019, 1020, 1020, 1020, 1021, 1021, 1021, 1021, 1022,
  1022, 1022, 1022, 1022, 1022, 1022, 1022, 1022, 1022, 1023, 1022,
];
const TONE_WIDTH = 1024;

export function SineTone(arg: number[], position: number) {
  position |= 0;
  let off = TONE_WIDTH - position;
  if (off < TONE_WIDTH / 2) position = off;
  return sineTone[position];
}

export function SawtoothTone(arg: number[], position: number) {
  return position;
}

export function TriangleTone(arg: number[], position: number) {
  return position < 512 ? position * 2 : (1023 - position) * 2;
}

export function NoiseTone(arg: number[], position: number) {
  // deterministic, semi-random noise
  let mult = arg[0];
  if (mult == 0) mult = 7919;
  return (position * mult) & 1023;
}

export function SquareWaveTone(arg: number[], position: number) {
  return position < 512 ? 1023 : 0;
}
